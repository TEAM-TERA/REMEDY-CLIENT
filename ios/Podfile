require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'Remedy' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
    )

    # Track Player 설정
    installer.pods_project.targets.each do |target|
      if target.name == 'react-native-track-player'
        target.build_configurations.each do |config|
          config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        end
      end
    end

    # 시뮬레이터 arm64 제외
    installer.pods_project.build_configurations.each do |config|
      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
    end

    # Folly만 c++17로, 나머지는 c++20 유지
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        if target.name == 'RCT-Folly'
          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        elsif target.name.start_with?('React') || target.name.start_with?('Yoga')
          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++20'
          config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        end

        # SwiftUICore 제거
        flags = config.build_settings['OTHER_LDFLAGS']
        if flags.is_a?(Array)
          config.build_settings['OTHER_LDFLAGS'] = flags.reject { |flag| flag.include?('SwiftUICore') }
        end
      end
    end
  end
end
